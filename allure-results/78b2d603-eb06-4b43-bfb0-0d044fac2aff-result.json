{"name": "test_use_the_same_browser_instance", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: It looks like you are using Playwright Sync API inside the asyncio loop.\nPlease use the Async API instead.", "trace": ".0 = <list_iterator object at 0x000001732C1EE830>\n\n>   kwargs = {arg: kwargs[arg] if arg in kwargs else request.getfixturevalue(arg) for arg in args}\n\nvenv\\Lib\\site-packages\\pytest_bdd\\scenario.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:1047: in execute\n    fixturedef = request._get_active_fixturedef(argname)\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:1091: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\nvenv\\Lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\nvenv\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nvenv\\Lib\\site-packages\\_pytest\\setuponly.py:36: in pytest_fixture_setup\n    return (yield)\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\nvenv\\Lib\\site-packages\\_pytest\\fixtures.py:891: in call_fixture_func\n    fixture_result = next(generator)\ntests\\step_definitions\\test_example.py:11: in browser\n    with sync_playwright() as p:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright.sync_api._context_manager.PlaywrightContextManager object at 0x000001732BD32C10>\n\n        def __enter__(self) -> SyncPlaywright:\n            try:\n                self._loop = asyncio.get_running_loop()\n            except RuntimeError:\n                self._loop = asyncio.new_event_loop()\n                self._own_loop = True\n            if self._loop.is_running():\n>               raise Error(\n                    \"\"\"It looks like you are using Playwright Sync API inside the asyncio loop.\n    Please use the Async API instead.\"\"\"\n                )\nE               playwright._impl._errors.Error: It looks like you are using Playwright Sync API inside the asyncio loop.\nE               Please use the Async API instead.\n\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_context_manager.py:47: Error"}, "description": "c:\\Users\\draga\\Documents\\python_project\\lesson\\tests\\features\\example.feature: Use the same browser instance", "start": 1731858465863, "stop": 1731858465877, "uuid": "91749107-f290-4471-95d6-eab482a9017b", "historyId": "f56a14e7731ceb8e682c6e72d9dece5f", "testCaseId": "f56a14e7731ceb8e682c6e72d9dece5f", "fullName": "tests.step_definitions.test_example#test_use_the_same_browser_instance", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests.step_definitions"}, {"name": "suite", "value": "test_example"}, {"name": "host", "value": "Doshena"}, {"name": "thread", "value": "28280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.step_definitions.test_example"}]}